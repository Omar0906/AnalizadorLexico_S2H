package analizador;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.event.UndoableEditEvent;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Document;
import javax.swing.text.Highlighter;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoManager;

import JFlex.LexicoS2H;
import JFlex.Tokens;
import TablaSimbolos.TablaSimbolos;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Torres
 */
public class block extends javax.swing.JFrame {

    /**
     * Creates new form block
     */
    NumeroLinea NumeroLinea;

    public block() throws Exception {
        initComponents();
        NumeroLinea = new NumeroLinea(txtBlock);
        jScrollPane2.setRowHeaderView(NumeroLinea);
        modelo = new DefaultTableModel(columnNames, 0);
        tblLexico.setModel(modelo);
        acciones();
        activar();
        // generar(ruta,ruta2,rutaS);
        manager();

    }

    public void manager() {
        Document doc = txtBlock.getDocument();

        // Listen for undo and redo events
        doc.addUndoableEditListener((UndoableEditEvent evt) -> {
            undo.addEdit(evt.getEdit());
        });

        // Create an undo action and add it to the text component
        txtBlock.getActionMap().put("Undo", new AbstractAction("Undo") {
            public void actionPerformed(ActionEvent evt) {
                try {
                    if (undo.canUndo()) {
                        undo.undo();
                    }
                } catch (CannotUndoException e) {
                }
            }
        });

        // Bind the undo action to ctl-Z
        txtBlock.getInputMap().put(KeyStroke.getKeyStroke("control Z"), "Undo");

        // Create a redo action and add it to the text component
        txtBlock.getActionMap().put("Redo", new AbstractAction("Redo") {
            public void actionPerformed(ActionEvent evt) {
                try {
                    if (undo.canRedo()) {
                        undo.redo();
                    }
                } catch (CannotRedoException e) {
                }
            }
        });

        // Bind the redo action to ctl-Y
        txtBlock.getInputMap().put(KeyStroke.getKeyStroke("control Y"), "Redo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dBuscar = new javax.swing.JDialog();
        lblBuscar = new javax.swing.JLabel();
        btnSiguiente = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        rbtnArriba = new javax.swing.JRadioButton();
        rbtnAbajo = new javax.swing.JRadioButton();
        chBCoinci = new javax.swing.JCheckBox();
        txtSearch = new javax.swing.JTextField();
        dReemplazar = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSearchR = new javax.swing.JTextField();
        txtReplace = new javax.swing.JTextField();
        chRCoincidir = new javax.swing.JCheckBox();
        btnSNext = new javax.swing.JButton();
        btnRepl = new javax.swing.JButton();
        btnReplAll = new javax.swing.JButton();
        btnRCan = new javax.swing.JButton();
        jDFormato = new javax.swing.JDialog();
        cmbLetra = new javax.swing.JComboBox<>();
        cmbForm = new javax.swing.JComboBox<>();
        cmbTam = new javax.swing.JComboBox<>();
        btncan = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtBlock = new javax.swing.JEditorPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtErrores = new javax.swing.JTextArea();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLexico = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnCompilar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnTablaSimbolos = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnNuevo = new javax.swing.JMenuItem();
        btnAbrir = new javax.swing.JMenuItem();
        btnGuardar = new javax.swing.JMenuItem();
        btnGC = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        btnSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        btnCopia = new javax.swing.JMenuItem();
        btnPegar = new javax.swing.JMenuItem();
        btnCortar = new javax.swing.JMenuItem();
        btnEliminar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        btnBuscar = new javax.swing.JMenuItem();
        btnRemplazar = new javax.swing.JMenuItem();
        btnTodos = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        btnEstilos = new javax.swing.JMenuItem();
        mnuAyudaG = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        dBuscar.setTitle("Buscar");
        dBuscar.setAlwaysOnTop(true);
        dBuscar.setResizable(false);

        lblBuscar.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        lblBuscar.setText("Buscar: ");
        lblBuscar.setFocusable(false);

        btnSiguiente.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        btnSiguiente.setText("Buscar Siguiente");
        btnSiguiente.setEnabled(false);
        btnSiguiente.setFocusable(false);
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setFocusable(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnArriba);
        rbtnArriba.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        rbtnArriba.setText("Arriba");
        rbtnArriba.setFocusable(false);

        buttonGroup1.add(rbtnAbajo);
        rbtnAbajo.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        rbtnAbajo.setSelected(true);
        rbtnAbajo.setText("Abajo");
        rbtnAbajo.setFocusable(false);

        chBCoinci.setText("Coincidir mayúsculas y minúsculas");
        chBCoinci.setFocusable(false);
        chBCoinci.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chBCoinciStateChanged(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout dBuscarLayout = new javax.swing.GroupLayout(dBuscar.getContentPane());
        dBuscar.getContentPane().setLayout(dBuscarLayout);
        dBuscarLayout.setHorizontalGroup(
            dBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(dBuscarLayout.createSequentialGroup()
                        .addComponent(lblBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dBuscarLayout.createSequentialGroup()
                        .addComponent(chBCoinci)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbtnArriba)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnAbajo)))
                .addGap(10, 10, 10)
                .addGroup(dBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        dBuscarLayout.setVerticalGroup(
            dBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dBuscarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(dBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBuscar)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSiguiente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnArriba)
                    .addComponent(rbtnAbajo)
                    .addComponent(chBCoinci))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dReemplazar.setAlwaysOnTop(true);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Buscar:");
        jLabel1.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Reemplazar");
        jLabel2.setFocusable(false);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("por:");
        jLabel3.setFocusable(false);

        txtSearchR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchRKeyReleased(evt);
            }
        });

        txtReplace.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtReplaceKeyReleased(evt);
            }
        });

        chRCoincidir.setText("Coincidir mayúsculas y minúsculas");
        chRCoincidir.setFocusable(false);
        chRCoincidir.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chRCoincidirStateChanged(evt);
            }
        });

        btnSNext.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSNext.setText("Buscar Siguiente");
        btnSNext.setEnabled(false);
        btnSNext.setFocusable(false);
        btnSNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSNextActionPerformed(evt);
            }
        });

        btnRepl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnRepl.setText("Reemplazar");
        btnRepl.setEnabled(false);
        btnRepl.setFocusable(false);
        btnRepl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplActionPerformed(evt);
            }
        });

        btnReplAll.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnReplAll.setText("Reemplazar todo");
        btnReplAll.setEnabled(false);
        btnReplAll.setFocusable(false);
        btnReplAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplAllActionPerformed(evt);
            }
        });

        btnRCan.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnRCan.setText("Cancelar");
        btnRCan.setFocusable(false);
        btnRCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRCanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dReemplazarLayout = new javax.swing.GroupLayout(dReemplazar.getContentPane());
        dReemplazar.getContentPane().setLayout(dReemplazarLayout);
        dReemplazarLayout.setHorizontalGroup(
            dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dReemplazarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dReemplazarLayout.createSequentialGroup()
                        .addGroup(dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtReplace)
                            .addComponent(txtSearchR, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)))
                    .addComponent(chRCoincidir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnRCan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReplAll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRepl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSNext, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dReemplazarLayout.setVerticalGroup(
            dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dReemplazarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSearchR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSNext))
                .addGroup(dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dReemplazarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtReplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRepl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReplAll))
                    .addGroup(dReemplazarLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dReemplazarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRCan)
                    .addComponent(chRCoincidir))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        cmbLetra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arial", "Consolas", "Serif", "Tahoma", "Verdana" }));
        cmbLetra.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbLetraItemStateChanged(evt);
            }
        });

        cmbForm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Negrita", "Cursiva" }));
        cmbForm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFormItemStateChanged(evt);
            }
        });
        cmbForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFormActionPerformed(evt);
            }
        });

        cmbTam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "14", "16", "18", "20" }));
        cmbTam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTamItemStateChanged(evt);
            }
        });
        cmbTam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTamActionPerformed(evt);
            }
        });

        btncan.setText("Cancelar");
        btncan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncanActionPerformed(evt);
            }
        });

        jLabel4.setText("Estilo de Fuente:");

        jLabel5.setText("Fuente:");

        jLabel6.setText("Tamaño");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDFormatoLayout = new javax.swing.GroupLayout(jDFormato.getContentPane());
        jDFormato.getContentPane().setLayout(jDFormatoLayout);
        jDFormatoLayout.setHorizontalGroup(
            jDFormatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDFormatoLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jDFormatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDFormatoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAceptar)
                        .addGap(18, 18, 18)
                        .addComponent(btncan))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDFormatoLayout.createSequentialGroup()
                        .addComponent(cmbLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbForm, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbTam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jDFormatoLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel6)))
                .addGap(25, 25, 25))
        );
        jDFormatoLayout.setVerticalGroup(
            jDFormatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDFormatoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jDFormatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDFormatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jDFormatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btncan)
                    .addComponent(btnAceptar))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Sin título");
        setMinimumSize(new java.awt.Dimension(919, 516));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtBlock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBlockMouseClicked(evt);
            }
        });
        txtBlock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBlockKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtBlock);

        txtErrores.setEditable(false);
        txtErrores.setColumns(20);
        txtErrores.setRows(5);
        jScrollPane4.setViewportView(txtErrores);

        tblLexico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblLexico);

        jTabbedPane2.addTab("Análisis Léxico", jScrollPane1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_save_173091.png"))); // NOI18N
        jButton1.setToolTipText("Guardar");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reading.png"))); // NOI18N
        jButton3.setToolTipText("Abrir");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_Save-as_85541.png"))); // NOI18N
        jButton2.setToolTipText("Guardar Como");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Leftchico.png"))); // NOI18N
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Rightchico.png"))); // NOI18N
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        btnCompilar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCompilar.setText("Compilar");
        btnCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCompilar);
        jToolBar1.add(jSeparator3);

        btnTablaSimbolos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTablaSimbolos.setText("Tabla de Símbolos");
        btnTablaSimbolos.setFocusable(false);
        btnTablaSimbolos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTablaSimbolos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTablaSimbolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablaSimbolosActionPerformed(evt);
            }
        });
        jToolBar1.add(btnTablaSimbolos);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("Archivo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        btnNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_new10_216291.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(btnNuevo);

        btnAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reading.png"))); // NOI18N
        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(btnAbrir);

        btnGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_save_173091.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(btnGuardar);

        btnGC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_Save-as_85541.png"))); // NOI18N
        btnGC.setText("Guardar como...");
        btnGC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGCActionPerformed(evt);
            }
        });
        jMenu1.add(btnGC);
        jMenu1.add(jSeparator2);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_22_171495.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jMenu1.add(btnSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edición");

        btnCopia.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnCopia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_Save-as_85541.png"))); // NOI18N
        btnCopia.setText("Copiar");
        btnCopia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiaActionPerformed(evt);
            }
        });
        jMenu2.add(btnCopia);

        btnPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnPegar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_paste_1608782.png"))); // NOI18N
        btnPegar.setText("Pegar");
        btnPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPegarActionPerformed(evt);
            }
        });
        jMenu2.add(btnPegar);

        btnCortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnCortar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_new10_216291.png"))); // NOI18N
        btnCortar.setText("Cortar");
        jMenu2.add(btnCortar);

        btnEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, 0));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jMenu2.add(btnEliminar);
        jMenu2.add(jSeparator1);

        btnBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jMenu2.add(btnBuscar);

        btnRemplazar.setText("Buscar y remplazar");
        btnRemplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemplazarActionPerformed(evt);
            }
        });
        jMenu2.add(btnRemplazar);

        btnTodos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnTodos.setText("Seleccionar Todo");
        btnTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodosActionPerformed(evt);
            }
        });
        jMenu2.add(btnTodos);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Formato");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        btnEstilos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_Hairdresser1_2315995.png"))); // NOI18N
        btnEstilos.setText("Estilos");
        btnEstilos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstilosActionPerformed(evt);
            }
        });
        jMenu3.add(btnEstilos);

        jMenuBar1.add(jMenu3);

        mnuAyudaG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/if_164_QuestionMark_183285.png"))); // NOI18N
        mnuAyudaG.setText("Ayuda");

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnuAyudaG.add(jMenuItem1);

        jMenuBar1.add(mnuAyudaG);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 918, 626);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGCActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGCActionPerformed
        guardarComo();
    }// GEN-LAST:event_btnGCActionPerformed

    private void activar() {
        if (!txtBlock.getText().equals("")) {
            btnCopia.setEnabled(true);
            btnCortar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnBuscar.setEnabled(true);
            btnTodos.setEnabled(true);
            btnRemplazar.setEnabled(true);
        } else {
            btnCopia.setEnabled(false);
            btnCortar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnBuscar.setEnabled(false);
            btnTodos.setEnabled(false);
            btnRemplazar.setEnabled(false);
        }
    }

    /*
     * private void comprobar(){
     * 
     * else{ try { java.io.FileWriter tw=new java.io.FileWriter(a);
     * tw.write(txtBlock.getText());tw.flush(); } catch (FileNotFoundException ex) {
     * Logger.getLogger(block.class.getName()).log(Level.SEVERE, null, ex); } catch
     * (IOException ex) { Logger.getLogger(block.class.getName()).log(Level.SEVERE,
     * null, ex); } } }
     */
    private void guardar() {
        if (a != null) {
            try {
                java.io.FileWriter tw = new java.io.FileWriter(a);
                tw.write(txtBlock.getText());
                tw.flush();
                e = false;
            } catch (FileNotFoundException ex) {
                Logger.getLogger(block.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(block.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (e == true) {
            Object[] opciones = {"Guardar", "No guardar", "Cancelar"};
            int eleccion = JOptionPane.showOptionDialog(this, "Quieres guardar el archivo " + getTitle(),
                    "Mensaje de Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones,
                    "Guardar");
            if (eleccion == 0) {
                try {
                    JFileChooser chooser = new JFileChooser();
                    FileNameExtensionFilter filter = new FileNameExtensionFilter("Programa Speak2Home", "s2h");
                    chooser.setFileFilter(filter);
                    chooser.setDialogTitle("Guardar");
                    chooser.setSelectedFile(new File(getTitle() + ".s2h"));
                    int returnVal = chooser.showSaveDialog(this);
                    if (returnVal == JFileChooser.APPROVE_OPTION) {
                        File archivo = chooser.getSelectedFile();
                        String fname = archivo.getAbsolutePath();
                        if (!fname.endsWith(".s2h")) {
                            archivo = new File(fname + ".s2h");
                        }
                        java.io.FileWriter tw = new java.io.FileWriter(archivo);
                        tw.write(txtBlock.getText());
                        tw.flush();
                    }
                } catch (FileNotFoundException ex) {
                    javax.swing.JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                } catch (IOException ex) {
                    javax.swing.JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                }
            } else if (eleccion == 1) {
                setTitle("Sin Titulo");
            } else {
                c = true;
            }
        }
    }

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNuevoActionPerformed
        if (a != null && e == true) {
            Object[] opciones = {"Guardar", "No guardar", "Cancelar"};
            int eleccion = JOptionPane.showOptionDialog(this, "Quieres guardar los cambios en " + getTitle(),
                    "Mensaje de Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones,
                    "Guardar");
            if (eleccion == 0) {
                guardar();
            } else if (eleccion == 2) {
                return;
            }
        } else if (e == true) {
            guardar();
        }
        if (c == true) {
            return;
        }
        c = false;
        a = null;
        setTitle("Sin Titulo");
        txtBlock.setText("");
        e = false;
        activar();
    }// GEN-LAST:event_btnNuevoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
        if (a != null && e == true) {
            Object[] opciones = {"Guardar", "No guardar", "Cancelar"};
            int eleccion = JOptionPane.showOptionDialog(this, "Quieres guardar los cambios en " + getTitle(),
                    "Mensaje de Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones,
                    "Guardar");
            if (eleccion == 0) {
                guardar();
                System.exit(0);
            }
            if (eleccion == 1) {
                System.exit(0);
            }
            if (eleccion == 2) {
                return;
            }
        } else if (e == true) {
            guardar();
            if (c == true) {
                c = false;
                return;
            } else {
                System.exit(0);
            }
        } else {
            System.exit(0);
        }
    }// GEN-LAST:event_formWindowClosing

    private void guardarComo() {
        try {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Programa Speak2Home", "s2h");
            chooser.setFileFilter(filter);
            chooser.setDialogTitle("Guardar");
            chooser.setSelectedFile(new File(getTitle() + ".s2h"));
            int returnVal = chooser.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File archivo = chooser.getSelectedFile();
                String fname = archivo.getAbsolutePath();
                if (!fname.endsWith(".s2h")) {
                    archivo = new File(fname + ".s2h");
                }
                java.io.FileWriter tw = new java.io.FileWriter(archivo);
                tw.write(txtBlock.getText());
                tw.flush();
                a = archivo;
                // titulo=titulo.substring(0, titulo.length()-4);
                setTitle(a.getName());
                c = false;
                e = false;
            }
        } catch (FileNotFoundException ex) {
            javax.swing.JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } catch (IOException ex) {
            javax.swing.JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAbrirActionPerformed
        abrirArchivo();
    }// GEN-LAST:event_btnAbrirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGuardarActionPerformed
        if (a == null) {
            guardarComo();
            return;
        }
        guardar();
        e = false;
    }// GEN-LAST:event_btnGuardarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSalirActionPerformed
        if (a != null && e == true) {
            Object[] opciones = {"Guardar", "No guardar", "Cancelar"};
            int eleccion = JOptionPane.showOptionDialog(this, "Quieres guardar los cambios en " + getTitle(),
                    "Mensaje de Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones,
                    "Guardar");
            if (eleccion == 0) {
                guardar();
                System.exit(0);
            }

            if (eleccion == 1) {
                System.exit(0);
            }
            if (eleccion == 2) {
                return;
            }
        } else if (e == true) {
            guardar();
            if (c == true) {
                c = false;
                return;
            } else {
                System.exit(0);
            }
        } else {
            System.exit(0);
        }
    }// GEN-LAST:event_btnSalirActionPerformed

    private void acciones() {
        Action[] acciones = txtBlock.getActions();
        btnCopia.setAction(getAccion(acciones, DefaultEditorKit.copyAction));
        btnPegar.setAction(getAccion(acciones, DefaultEditorKit.pasteAction));
        btnEliminar.setAction(getAccion(acciones, DefaultEditorKit.deleteNextCharAction));
        btnCortar.setAction(getAccion(acciones, DefaultEditorKit.cutAction));
        btnCopia.setText("Copiar");
        btnPegar.setText("Pegar");
        btnEliminar.setText("Eliminar");
        btnCortar.setText("Cortar");
        activar();
    }

    public Action getAccion(Action[] acciones, String nombreAccion) {
        Hashtable<Object, Action> acc = new Hashtable<Object, Action>();
        for (int i = 0; i < acciones.length; i++) {
            Action accion = acciones[i];
            acc.put(accion.getValue(Action.NAME), accion);
        }
        return acc.get(nombreAccion);
    }

    private void btnCopiaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCopiaActionPerformed

    }// GEN-LAST:event_btnCopiaActionPerformed

    private void txtBlockKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtBlockKeyTyped
        if (Character.isDefined(evt.getKeyChar())) {
            e = true;
        }
        activar();
        Highlighter h = txtBlock.getHighlighter();
        h.removeAllHighlights();
    }// GEN-LAST:event_txtBlockKeyTyped

    public void buscarpalabra(JEditorPane area1, String texto) {
        if (texto.length() >= 1) {
            DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(
                    Color.BLUE);
            Highlighter h = area1.getHighlighter();
            h.removeAllHighlights();
            String text = area1.getText();
            String caracteres = texto;
            Pattern p = Pattern.compile("(?i)" + caracteres);
            Matcher m = p.matcher(text);
            while (m.find()) {
                try {
                    h.addHighlight(m.start(), m.end(), highlightPainter);
                } catch (BadLocationException ex) {
                    // Logger.getLogger(color.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(area1, "la palabra a buscar no puede ser vacia");
        }
    }

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBuscarActionPerformed
        /*
         * String b=showInputDialog(null,"Busqueda"); try{ buscarpalabra(txtBlock,b);
         * }catch(java.lang.NullPointerException e){
         * showMessageDialog(null,"Busqueda erronea"); }
         */
        dBuscar.setSize(475, 125);
        Dimension pantallaTamano = Toolkit.getDefaultToolkit().getScreenSize();
        dBuscar.setLocation((pantallaTamano.width / 2) - (dBuscar.getWidth() / 2),
                (pantallaTamano.height / 2) - (dBuscar.getHeight() / 2));
        if (txtSearch.getText().compareTo("") != 0) {
            btnSiguiente.setEnabled(true);
        } else {
            btnSiguiente.setEnabled(false);
        }
        dBuscar.show();
    }// GEN-LAST:event_btnBuscarActionPerformed

    private void btnTodosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTodosActionPerformed
        txtBlock.selectAll();
    }// GEN-LAST:event_btnTodosActionPerformed

    private void txtBlockMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_txtBlockMouseClicked
        if (evt.getClickCount() >= 2) {
            Highlighter h = txtBlock.getHighlighter();
            h.removeAllHighlights();
        }
        activar();
    }// GEN-LAST:event_txtBlockMouseClicked

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jMenu1ActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSiguienteActionPerformed
        String txtUpper = txtBlock.getText();
        String txtLower = txtBlock.getText().toLowerCase();
        if (buscant == 1) {
            iBuscar = txtBlock.getCaretPosition();
        } else {
            buscant = 1;
        }
        if (rbtnArriba.isSelected()) {
            if (cBusca == 0) {
                if (iBuscar != 0) {
                    iBuscar = iBuscar - 1;
                }
                if (mayusOrmin) {
                    cBusca = txtUpper.indexOf(pBuscada, iBuscar);
                } else {
                    cBusca = txtLower.indexOf(pBuscada, iBuscar);
                }
            }
            if (iBuscar == 0) {
                int tempBuscar = 0;
                while (tempBuscar != -1) {
                    iBuscar = tempBuscar;
                    if (mayusOrmin) {
                        tempBuscar = txtUpper.indexOf(pBuscada, tempBuscar + 1);
                    } else {
                        tempBuscar = txtLower.indexOf(pBuscada, tempBuscar + 1);
                    }
                    cBusca = iBuscar;
                }
            } else {
                int tempBuscar = 0;
                while (tempBuscar != -1) {
                    int aux;
                    if (mayusOrmin) {
                        aux = txtUpper.indexOf(pBuscada, tempBuscar + 1);
                    } else {
                        aux = txtLower.indexOf(pBuscada, tempBuscar + 1);
                    }
                    if (aux == cBusca) {
                        if (tempBuscar == 0) {
                            iBuscar = -1;
                            tempBuscar = -1;
                            cBusca = 0;
                        } else {
                            iBuscar = tempBuscar;
                            tempBuscar = -1;
                            cBusca = iBuscar;
                        }
                    } else {
                        iBuscar = tempBuscar;
                        if (mayusOrmin) {
                            tempBuscar = txtUpper.indexOf(pBuscada, tempBuscar + 1);
                        } else {
                            tempBuscar = txtLower.indexOf(pBuscada, tempBuscar + 1);
                        }
                    }
                }
            }
        } else {
            cBusca = 0;
            if (mayusOrmin) {
                iBuscar = txtUpper.indexOf(pBuscada, iBuscar);
            } else {
                iBuscar = txtLower.indexOf(pBuscada, iBuscar);
            }
        }
        if (iBuscar != -1) {
            txtBlock.select(iBuscar, iBuscar + pBuscada.length());
        } else {
            if (!reemplazarTot) {
                dBuscar.setAlwaysOnTop(false);
                dReemplazar.setAlwaysOnTop(false);
                Object[] options = {"Aceptar"};
                JOptionPane.showOptionDialog(this, "No se encontró \"" + pBuscada + "\"", "Bloc de Notas",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                cBusca = 0;
                iBuscar = 0;
                txtBlock.select(0, 0);
            }
        }
        dBuscar.setAlwaysOnTop(true);
        dReemplazar.setAlwaysOnTop(true);
    }// GEN-LAST:event_btnSiguienteActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCancelarActionPerformed
        dBuscar.hide();
    }// GEN-LAST:event_btnCancelarActionPerformed

    private void chBCoinciStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_chBCoinciStateChanged
        mayusOrmin = chBCoinci.isSelected();
    }// GEN-LAST:event_chBCoinciStateChanged

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtSearchKeyReleased
        pBuscada = txtSearch.getText();
        txtSearchR.setText(pBuscada);
        if (pBuscada.compareTo("") == 0) {
            btnSiguiente.setEnabled(false);
        } else {
            btnSiguiente.setEnabled(true);
        }
        if (pBuscada.compareTo("") == 0) {
            if (txtBlock.getText().compareTo("") == 0) {
                btnSiguiente.setEnabled(false);
            } else {
                btnSiguiente.setEnabled(true);
            }
        }
    }// GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchRKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtSearchRKeyReleased
        pBuscada = txtSearchR.getText();
        txtSearch.setText(pBuscada);
        if (pBuscada.compareTo("") == 0) {
            btnSNext.setEnabled(false);
            btnRepl.setEnabled(false);
            btnReplAll.setEnabled(false);
        } else {
            btnSNext.setEnabled(true);
            btnRepl.setEnabled(true);
            btnReplAll.setEnabled(true);
        }
        if (pBuscada.compareTo("") != 0) {
            if (txtBlock.getText().compareTo("") == 0) {
                btnSiguiente.setEnabled(false);
            } else {
                btnSiguiente.setEnabled(true);
            }
        }
    }// GEN-LAST:event_txtSearchRKeyReleased

    private void txtReplaceKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtReplaceKeyReleased
        reemplazar = txtReplace.getText();
    }// GEN-LAST:event_txtReplaceKeyReleased

    private void chRCoincidirStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_chRCoincidirStateChanged
        mayusOrmin = chRCoincidir.isSelected();
    }// GEN-LAST:event_chRCoincidirStateChanged

    private void btnSNextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSNextActionPerformed
        btnSiguienteActionPerformed(evt);
    }// GEN-LAST:event_btnSNextActionPerformed

    private void btnReplActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnReplActionPerformed
        btnSiguienteActionPerformed(evt);
        if (iBuscar != -1) {
            txtBlock.setText(txtBlock.getText().substring(0, iBuscar) + reemplazar
                    + txtBlock.getText().substring(iBuscar + pBuscada.length(), txtBlock.getText().length()));
            txtBlock.select(iBuscar, iBuscar + reemplazar.length());
        }
    }// GEN-LAST:event_btnReplActionPerformed

    private void btnReplAllActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnReplAllActionPerformed
        reemplazarTot = true;
        iBuscar = 0;
        boolean arriba = rbtnArriba.isSelected();
        rbtnAbajo.setEnabled(true);
        buscant = 0;
        while (iBuscar != -1) {
            btnSiguienteActionPerformed(evt);
            if (iBuscar != -1) {
                txtBlock.setText(txtBlock.getText().substring(0, iBuscar) + reemplazar
                        + txtBlock.getText().substring(iBuscar + pBuscada.length(), txtBlock.getText().length()));
                txtBlock.select(iBuscar, iBuscar + reemplazar.length());
            }
        }
        if (arriba) {
            rbtnArriba.setEnabled(true);
        }
        reemplazarTot = false;
    }// GEN-LAST:event_btnReplAllActionPerformed

    private void btnRCanActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRCanActionPerformed
        dReemplazar.hide();
    }// GEN-LAST:event_btnRCanActionPerformed

    private void btnRemplazarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRemplazarActionPerformed
        dReemplazar.setSize(475, 180);
        Dimension pantallaTamano = Toolkit.getDefaultToolkit().getScreenSize();
        dReemplazar.setLocation((pantallaTamano.width / 2) - (dReemplazar.getWidth() / 2),
                (pantallaTamano.height / 2) - (dReemplazar.getHeight() / 2));
        dReemplazar.show();
    }// GEN-LAST:event_btnRemplazarActionPerformed

    private void estilo() {
        switch (cmbLetra.getSelectedIndex()) {
            case 0:
                formatoletra = Font.PLAIN;
                break;
            case 1:
                formatoletra = Font.BOLD;
                break;
            case 2:
                formatoletra = Font.ITALIC;
                break;
        }
        txtBlock.setFont(new Font((String) cmbLetra.getSelectedItem(), formatoletra,
                Integer.parseInt((String) cmbTam.getSelectedItem())));
    }

    private void btncanActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btncanActionPerformed
        txtBlock.setFont(actual);
        jDFormato.dispose();
    }// GEN-LAST:event_btncanActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenu3ActionPerformed

    }// GEN-LAST:event_jMenu3ActionPerformed

    private void btnEstilosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnEstilosActionPerformed
        jDFormato.setSize(400, 150);
        Dimension pantallaTamano = Toolkit.getDefaultToolkit().getScreenSize();
        jDFormato.setLocation((pantallaTamano.width / 2) - (jDFormato.getWidth() / 2),
                (pantallaTamano.height / 2) - (jDFormato.getHeight() / 2));
        actual = txtBlock.getFont();
        jDFormato.show();
    }// GEN-LAST:event_btnEstilosActionPerformed

    private void cmbFormActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmbFormActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cmbFormActionPerformed

    private void cmbTamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmbTamActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cmbTamActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAceptarActionPerformed
        estilo();
        actual = txtBlock.getFont();
        jDFormato.dispose();
    }// GEN-LAST:event_btnAceptarActionPerformed

    private void cmbLetraItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_cmbLetraItemStateChanged
        estilo();
    }// GEN-LAST:event_cmbLetraItemStateChanged

    private void cmbFormItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_cmbFormItemStateChanged
        // TODO add your handling code here:
    }// GEN-LAST:event_cmbFormItemStateChanged

    private void cmbTamItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_cmbTamItemStateChanged
        estilo();
    }// GEN-LAST:event_cmbTamItemStateChanged

    private void btnPegarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnPegarActionPerformed
        activar();
    }// GEN-LAST:event_btnPegarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        if (a == null) {
            guardarComo();
            return;
        }
        guardar();
        e = false;

    }// GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
        abrirArchivo();
    }// GEN-LAST:event_jButton3ActionPerformed
    private void abrirArchivo(){
        if (a != null && e == true) {
            Object[] opciones = {"Guardar", "No guardar", "Cancelar"};
            int eleccion = JOptionPane.showOptionDialog(this, "Quieres guardar los cambios en " + getTitle(),
                    "Mensaje de Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones,
                    "Guardar");
            switch (eleccion) {
                case 0:
                    guardar();
                    break;
                case 1:
                    txtBlock.setText("");
                    break;
                case 2:
                    return;
                default:
                    break;
            }
        } else if (a == null && e == true) {
            Object[] opciones = {"Guardar", "No guardar", "Cancelar"};
            int eleccion = JOptionPane.showOptionDialog(this, "Quieres guardar el archivo " + getTitle(),
                    "Mensaje de Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones,
                    "Guardar");
            switch (eleccion) {
                case 0:
                    guardar();
                    break;
                case 1:
                    txtBlock.setText("");
                    break;
                case 2:
                    return;
                default:
                    break;
            }
            c = false;
        }
        try {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("NombrePrograma", "s2h");
            chooser.setFileFilter(filter);
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.ABORT) {
                txtBlock.setText("");
                a = null;
            }
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File archivo = chooser.getSelectedFile();
                Charset charset = Charset.forName("ISO-8859-1");
                // titulo=titulo.substring(0, titulo.length()-4);
                a = archivo;
                setTitle(a.getName());
                txtBlock.setText("");
                List<String> tex = Files.readAllLines(archivo.toPath(), charset);
                for (String line : tex) {
                    txtBlock.setText(txtBlock.getText() + line + "\n");
                }
                e = false;
                activar();
                modelo.setRowCount(0);
                tablaSimbolos.clear();
                return;
            }
        } catch (FileNotFoundException ex) {
            javax.swing.JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } catch (IOException ex) {
            javax.swing.JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
        activar();

        c = false;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
        guardarComo();
    }// GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton4ActionPerformed
        try {
            undo.undo();
        } catch (CannotUndoException e) {
        }
    }// GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton5ActionPerformed
        try {
            undo.redo();
        } catch (CannotRedoException e) {
        }
    }// GEN-LAST:event_jButton5ActionPerformed

    public void analizarLexico() {
        ArrayList<Tokens> listaTemp = new ArrayList<Tokens>();
        ArrayList<String> listaErrorsTemp = new ArrayList<String>();
        try {
            Reader inputString = new StringReader(txtBlock.getText());
            BufferedReader buffer = new BufferedReader(inputString);
            LexicoS2H analizador = new LexicoS2H(buffer);
            while (analizador._existenTokens()) {
                try {
                    Tokens token = analizador.yylex();
                    if (token.isPrintable()) {
                        listaTemp.add(token);

                        if (!tablaSimbolos.buscarToken(token)&&token.isID()) {
                            tablaSimbolos.addToken(token);
                        }
                    }
                    if (token.isError()) {
                        listaErrorsTemp.add(token.getMsgError());
                    }
                } catch (IOException e) {
                    System.out.println(e.getMessage());
                }
                actualizarTabla(listaTemp, listaErrorsTemp);
            }

        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    public void actualizarTabla(ArrayList<Tokens> temp, ArrayList<String> errores) {
        this.modelo.setRowCount(0);
        txtErrores.setText("");
        for (Tokens objeto : temp) {
            this.modelo.addRow(objeto.tokenLexico());
        }
        if (errores.isEmpty()) {
            this.txtErrores.setText("No fueron encontrados errores léxicos");
        } else {
            for (String s : errores) {
                this.txtErrores.append(s + "\n");
            }
            if(errores.size() == 1){
                this.txtErrores.append("Se ha encontrado 1 error.");
            }else{
                this.txtErrores.append("Se han encontrado " + errores.size() + " errores.");
            }
            
        }
    }

    private void agregarTablaSimbolos(Tokens simbolo) {

    }

    private void btnCompilarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCompilarActionPerformed
        if (a == null) {
            guardarComo();
        } else {
            guardar();
        }
        e = false;
        tablaSimbolos = new TablaSimbolos();
        analizarLexico();
    }// GEN-LAST:event_btnCompilarActionPerformed

    private void btnTablaSimbolosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton6ActionPerformed
        new Tabla_Simbolos(this, tablaSimbolos).setVisible(true);
    }// GEN-LAST:event_jButton6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem1ActionPerformed

    }// GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(block.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(block.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(block.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(block.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new block().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(block.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private boolean e = false;
    private File a = null;
    private boolean c = false;
    // otras
    public String tipodeletra = "Arial";
    public String letras, nombredearchivo = "";
    public int formatoletra = Font.PLAIN;
    public int tamaletra = 12;
    public boolean sobreescribir = false;
    private int iBuscar = 0, buscant = 0, cBusca = 0;
    private String pBuscada = "";
    private boolean mayusOrmin = false;
    private boolean reemplazarTot = false;
    private String reemplazar = "";
    private Font actual;
    private UndoManager undo = new UndoManager();
    private final String[] columnNames = {"Lexema", "Componente Léxico", "Fila", "Columna"};
    private DefaultTableModel modelo;
    private TablaSimbolos tablaSimbolos = new TablaSimbolos();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnAbrir;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JMenuItem btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCompilar;
    private javax.swing.JMenuItem btnCopia;
    private javax.swing.JMenuItem btnCortar;
    private javax.swing.JMenuItem btnEliminar;
    private javax.swing.JMenuItem btnEstilos;
    private javax.swing.JMenuItem btnGC;
    private javax.swing.JMenuItem btnGuardar;
    private javax.swing.JMenuItem btnNuevo;
    private javax.swing.JMenuItem btnPegar;
    private javax.swing.JButton btnRCan;
    private javax.swing.JMenuItem btnRemplazar;
    private javax.swing.JButton btnRepl;
    private javax.swing.JButton btnReplAll;
    private javax.swing.JButton btnSNext;
    private javax.swing.JMenuItem btnSalir;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnTablaSimbolos;
    private javax.swing.JMenuItem btnTodos;
    private javax.swing.JButton btncan;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chBCoinci;
    private javax.swing.JCheckBox chRCoincidir;
    private javax.swing.JComboBox<String> cmbForm;
    private javax.swing.JComboBox<String> cmbLetra;
    private javax.swing.JComboBox<String> cmbTam;
    private javax.swing.JDialog dBuscar;
    private javax.swing.JDialog dReemplazar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JDialog jDFormato;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JMenu mnuAyudaG;
    private javax.swing.JRadioButton rbtnAbajo;
    private javax.swing.JRadioButton rbtnArriba;
    private javax.swing.JTable tblLexico;
    private javax.swing.JEditorPane txtBlock;
    private javax.swing.JTextArea txtErrores;
    private javax.swing.JTextField txtReplace;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchR;
    // End of variables declaration//GEN-END:variables
}
